# Gitlab CI Pipeline configuration

variables:
  DOCKER_BUILDER_IMAGE: ${CI_REGISTRY_IMAGE}/docker-builder:latest

stages:
  - pre-build
  - build
  - pre-test
  - test
  - deploy

.docker-login-before-script: &docker-login-before-script
  before_script:
    - docker login -u "${CI_REGISTRY_USER?}" -p "${CI_REGISTRY_PASSWORD?}" "${CI_REGISTRY?}"

.docker-build-tmpl: &docker-build-tmpl
  << : *docker-login-before-script
  stage: build
  image: $DOCKER_BUILDER_IMAGE
  services:
    - docker:dind
  script:
    - git fetch --tags
    - VERSION="$(git describe --tags --always)"
    - VERSION="${VERSION%-*-*}"
    - RELEASE=$(jq -r .release < etc/ncp.cfg)
    - '[[ "${ARCHITECTURE?}" == "x86"   ]] && { ARCH=amd64; ARCH_QEMU=x86_64; NCP_TAG=x86; }'
    - '[[ "${ARCHITECTURE?}" == "armhf"   ]] && { ARCH=arm32v7; ARCH_QEMU=arm; NCP_TAG=armhf; }'
    - '[[ "${ARCHITECTURE?}" == "arm64"   ]] && { ARCH=arm64v8; ARCH_QEMU=aarch64; NCP_TAG=arm64; }'
    - docker pull ${CI_REGISTRY_IMAGE}/nextcloudpi-${NCP_TAG?}:latest || true
    - |
      for TARGET in nextcloudpi debian-ncp lamp nextcloud
      do
        DOCKER_BUILDKIT=1 docker build --progress=plain . -f docker/multistage/Dockerfile --pull --target "${TARGET}" \
          --build-arg release=${RELEASE?} --build-arg arch=${ARCH?} --build-arg arch_qemu=${ARCH_QEMU?} --build-arg "ncp_ver=${VERSION?}" \
          -t "${CI_REGISTRY_IMAGE?}/${TARGET}-${NCP_TAG?}:latest" \
          -t "${CI_REGISTRY_IMAGE?}/${TARGET}-${NCP_TAG?}:${CI_PIPELINE_IID}" \
          -t "${CI_REGISTRY_IMAGE?}/${TARGET}-${NCP_TAG?}:${VERSION?}"
        docker push "${CI_REGISTRY_IMAGE?}/${TARGET}-${NCP_TAG?}"
      done

.integration-tests-docker-tmpl: &integration-tests-docker-tmpl
  stage: test
  services:
    - name: selenium/standalone-firefox
      alias: selenium
    - name: "${CI_REGISTRY_IMAGE}/nextcloudpi-${ARCHITECTURE}:${CI_PIPELINE_IID}"
      alias: nextcloudpi
  image: python:3.8-buster
  script:
    - pip install selenium
    - NCP_IP="$(getent hosts nextcloudpi | cut -f1 -d ' ')"
    - ./tests/activation_tests.py "$NCP_IP" "http://selenium:4444/wd/hub"
    - ./tests/nextcloud_tests.py "$NCP_IP" "http://selenium:4444/wd/hub"

.system-test-docker-tmpl: &system-test-docker-tmpl
  stage: pre-build
  image: "${CI_REGISTRY_IMAGE}/nextcloudpi-${ARCHITECTURE}:${CI_PIPELINE_IID}"
  script:
    - ./tests/sysyem_tests.py

.docker-deploy-tmpl: &docker-deploy-tmpl
  << : *docker-login-before-script
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker pull "${CI_REGISTRY_IMAGE}/nextcloudpi-${NCP_TAG?}:${CI_PIPELINE_IID}"
    - docker login -u "${DOCKERHUB_USER?}" -p "${DOCKERHUB_PASSWORD?}"
    - >
      docker tag "${CI_REGISTRY_IMAGE}/nextcloudpi-${NCP_TAG?}:${CI_PIPELINE_IID}"
      "${DOCKERHUB_NAMESPACE?}/nextcloudpi-${NCP_TAG?}:latest"
    - >
      docker tag "${CI_REGISTRY_IMAGE}/nextcloudpi-${NCP_TAG?}:${CI_PIPELINE_IID}"
      "${DOCKERHUB_NAMESPACE?}/nextcloudpi-${NCP_TAG?}:${CI_COMMIT_REF_SLUG}"
    - docker push "${DOCKERHUB_NAMESPACE?}/nextcloudpi-${NCP_TAG?}"
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: manual
    - if: '$DEPLOYMENT_TESTING == "true"'
      when: manual

docker-test-x86:
  << : *integration-tests-docker-tmpl
  variables:
    ARCHITECTURE: "x86"
    NAME: nextcloudpi
  needs:
    - docker-build-x86

docker-test-armhf:
  << : *integration-tests-docker-tmpl
  variables:
    ARCHITECTURE: "armhf"
    NAME: nextcloudpi
  needs:
    - docker-build-armhf

docker-test-arm64:
  << : *integration-tests-docker-tmpl
  variables:
    ARCHITECTURE: "arm64"
    NAME: nextcloudpi
  needs:
    - docker-build-arm64

docker-build-x86:
  << : *docker-build-tmpl
  variables:
    ARCHITECTURE: "x86"

docker-build-armhf:
  <<: *docker-build-tmpl
  variables:
    ARCHITECTURE: "armhf"

docker-build-arm64:
  <<: *docker-build-tmpl
  variables:
    ARCHITECTURE: "arm64"

build-docker-builder:
  << : *docker-login-before-script
  stage: pre-build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/docker-builder:latest || echo "docker-builder:latest not found in \"${CI_REGISTRY_IMAGE}\"!"
    - CURRENT="$(docker inspect -f '{{ .DockerVersion }}' ${CI_REGISTRY_IMAGE}/docker-builder:latest || echo "NONE")"
    - LATEST="$(docker version -f '{{ .Client.Version }}')"
    - |
      if [[ "$CURRENT" != "$LATEST" ]]
      then
        docker build --progress=plain . -f ci/docker/docker-builder/Dockerfile \
          -t "${CI_REGISTRY_IMAGE}/docker-builder:latest" -t "${CI_REGISTRY_IMAGE}/docker-builder:${LATEST}"
        docker push "${CI_REGISTRY_IMAGE}/docker-builder:latest"
      else
        echo "Image already exists for latests docker version ($LATEST). Not rebuilding."
      fi

docker-deploy-x86:
  <<: *docker-deploy-tmpl
  variables:
    NCP_TAG: x86
    DEPLOYMENT_TESTING: "true"
  needs:
    - docker-test-x86
